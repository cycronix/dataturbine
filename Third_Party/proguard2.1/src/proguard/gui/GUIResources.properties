# ProGuard -- obfuscation and shrinking package for Java class files.
# Copyright (c) 1999-2004 Eric Lafortune (eric@graphics.cornell.edu)

#
# Tab names.
#
proGuardTab = ProGuard
inputTab    = Input
keepTab     = Keep
outputTab   = Output
processTab  = Process
reTraceTab  = ReTrace

#
# Splash text.
#
developed = Developed by Eric Lafortune

#
# Panel titles.
#
welcome                   = Welcome to ProGuard, version 2.1
basic                     = Basic
additional                = Additional
special                   = Special
information               = Information
shrinking                 = Shrinking
obfuscation               = Obfuscation
consistencyAndCorrectness = Consistency and correctness
processingConsole         = Processing console
reTraceSettings           = ReTrace settings

mappingFile            = Mapping file
obfuscatedStackTrace   = Obfuscated stack trace
deobfuscatedStackTrace = De-obfuscated stack trace

#
# Info texts.
#
proGuardInfo = \
  ProGuard is a free class file shrinker and obfuscator.\
  \n\n\
  With this GUI, you can create, load, modify, and save ProGuard configurations. \
  You can then process your code right away, \
  or you can run ProGuard from the command line using your saved configuration. \
  \n\n\
  With the ReTrace part of this GUI you can de-obfuscate your stack traces.\
  \n\n\
  ProGuard and ReTrace are written and maintained by Eric Lafortune.\
  \n\n\
  Based on class file IO code by Mark Welsh.\
  \n\n\
  Ant task contributed by Dirk Schnelle.\
  \n\n\
  Distributed under the GNU General Public License.\
  \n\
  Copyright (c) 1999-2004.

processingInfo = \
  You can now start processing your code, \
  or you can run ProGuard from the command line using your saved configuration.\
  \n\n\
  It's always a good idea to save your configuration first.

reTraceInfo = \
  If you had ProGuard write out a mapping file, \
  you can de-obfuscate your obfuscated stack traces with ReTrace!\
  \n\n\
  You can load an obfuscated stack trace from a file, \
  or you can paste it straight into the text area above.

#
# Titles and labels corresponding to common ProGuard options.
#
programJars  = Program jars and directories
resourceJars = Resource jars and directories
libraryJars  = Library jars and directories
outputJars   = Output jars and directories

printSeeds                  = Print seeds
printUsage                  = Print usage
printMapping                = Print mapping
applyMapping                = Apply mapping
verbose                     = Verbose
ignoreWarnings              = Ignore warnings about missing libraries
warn                        = Warn about missing libraries
note                        = Note variable Class.forName invocations
shrink                      = Shrink
obfuscate                   = Obfuscate
useMixedCaseClassNames      = Use mixed-case class names
overloadAggressively        = Overload aggressively
defaultPackage              = Default package
keepAttributes              = Keep attributes
renameSourceFileAttribute   = Rename SourceFile attribute
skipNonPublicLibraryClasses = Skip non-public library classes

#
# Labels for boilerplate keep options.
#
applications        = Applications
applets             = Applets
servlets            = Servlets
midlets             = Midlets
library             = Library
native_method_names = Native method names
serialization_code  = Serialization code
beaninfo_classes    = BeanInfo classes
bean_classes        = Bean classes
rmi_interfaces      = RMI interfaces
rmi_implementations = RMI implementations
_class_method_names = .class method names

#
# Titles and labels corresponding to ProGuard keep options.
#
keepTitle = Keep

keepFromShrinkingObfuscation = Explicitly keep from shrinking and from obfuscation
keepFromObfuscation          = Explicitly keep from obfuscation only

keep                   = Keep classes and class members
keepClassMembers       = Keep class members only
keepClassesWithMembers = Keep classes and class members, if members are present

#
# Further keep titles and labels.
#
comments               = Comments
access                 = Access
required               = Required
not                    = Not
dontCare               = Don't care
class                  = Class
extendsImplementsClass = Extends/implements class
classMembers           = Class members

extensionsOf = Extensions of
specificationNumber = Specification #

returnType = Return type
name       = Name
arguments  = Arguments

#
# File selection titles.
#
selectConfigurationFile =  Select a configuration file...
saveConfigurationFile   = Save configuration...
selectSeedsFile         = Select a seeds output file...
selectUsageFile         = Select a usage output file...
selectPrintMappingFile  = Select an output mapping file...
selectApplyMappingFile  = Select an input mapping file...
selectStackTraceFile    = Select a stack trace file...

cantOpenConfigurationFile  = Can''t open the configuration file [{0}]
cantParseConfigurationFile = Can''t parse the configuration file [{0}]
cantSaveConfigurationFile  = Can''t save the configuration file [{0}]
cantOpenStackTraceFile     = Can''t open the stack trace file [{0}]

jarZipExtensions = *.jar, *.zip (archives and directories)
proExtension     = *.pro (ProGuard configurations)

addJars     = Add one or more jars or directories...
chooseJars  = Choose different jars or directories...
enterFilter = \
  Please enter a filter for the file names in the selected jars or directories. \
  The filter is a comma-separated list of relative file names, supporting ?, * and ** wildcards, and ! negators.
filter      = Filter...

#
# Simple button texts.
#
previous = Previous
next     = Next
browse   = Browse...
cancel   = Cancel
ok       = Ok

add      = Add...
edit     = Edit...
remove   = Remove
moveUp   = Move up
moveDown = Move down

moveToLibraries = Move to libraries
copyToResources = Copy to resources
moveToProgram   = Move to program

addField  = Add field...
addMethod = Add method...

loadConfiguration = Load configuration...
viewConfiguration = View configuration
saveConfiguration = Save configuration...
loadStackTrace    = Load stack trace...
process           = Process!
reTrace           = ReTrace!

#
# Progress messages and error messages.
#
warning         = Warning
outOfMemory     = Out of memory
outOfMemoryInfo = \n\
  You should run the ProGuard GUI with a larger java heap size, \
  with a command like\
  \n\n\t\
  java -Xms128m -Xmx192m -jar proguardgui.jar {0}\
  \n\n\
  or you can try running ProGuard from the command line. \
  with a command like\
  \n\n\t\
  java -jar proguard.jar @{0}
sampleConfigurationFileName = configuration.pro
errorProcessing = Error during processing
errorReTracing  = Error during retracing
